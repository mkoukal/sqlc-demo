// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: classes.sql

package db

import (
	"context"

	"github.com/google/uuid"
)

const getClassesByPerson = `-- name: GetClassesByPerson :many
SELECT c.code, c.name, c.credits
FROM public.class AS c
JOIN public.relations AS r ON c.code = r.class_code
JOIN public.person AS p ON r.person_id = p.id
WHERE p.id = $1
AND r.role = $2
`

type GetClassesByPersonParams struct {
	ID   uuid.UUID `json:"id"`
	Role RoleType  `json:"role"`
}

func (q *Queries) GetClassesByPerson(ctx context.Context, arg GetClassesByPersonParams) ([]Class, error) {
	rows, err := q.db.Query(ctx, getClassesByPerson, arg.ID, arg.Role)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Class
	for rows.Next() {
		var i Class
		if err := rows.Scan(&i.Code, &i.Name, &i.Credits); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
